!!>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
!! NEMO/OPA  :  1 - run manager      (namrun)
!! namelists    2 - domain           (namcfg, namzgr, namzgr_sco, namdom, namtsd)
!!              3 - surface boundary (namsbc, namsbc_ana, namsbc_flx, namsbc_clio, namsbc_core, namsbc_sas
!!                                    namsbc_cpl, namtra_qsr, namsbc_rnf, namsbc_isf
!!                                    namsbc_apr, namsbc_ssr, namsbc_alb, namsbc_wave, namberg)
!!              4 - lateral boundary (namlbc, namcla, namobc, namagrif, nambdy, nambdy_tide)
!!              5 - bottom  boundary (nambfr, nambbc, nambbl)
!!              6 - tracer           (nameos, namtra_adv, namtra_ldf, namtra_dmp)
!!              7 - dynamics         (namdyn_adv, namdyn_vor, namdyn_hpg, namdyn_spg, namdyn_ldf)
!!              8 - vertical physics  (namzdf, namzdf_ric, namzdf_tke, namzdf_kpp, namzdf_ddm, namzdf_tmx)
!!              9 - diagnostics      (namnc4, namtrd, namspr, namflo, namhsb)
!!             10 - miscellaneous    (namsol, nammpp, namctl)
!!             11 - Obs & Assim      (namobs, nam_asminc)
!!>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
!
!!======================================================================
!!                   ***  Run management namelists  ***
!!======================================================================
!!   namrun       parameters of the run
!!======================================================================
!
!-----------------------------------------------------------------------
&namrun        !   parameters of the run
!-----------------------------------------------------------------------
   cn_exp      = "AMM7"  !  experience name 
   nn_it000    =  105121   !  first time step
   nn_itend    =  210240   !  last  time step 
   ln_rst_list = .FALSE.   !  output restarts at list of times using nn_stocklist (T) or at set frequency with nn_stock (F)
   nn_date0    = 20000101  !  date at nit_0000 (format yyyymmdd) used if ln_rstart=F or (ln_rstart=T and nn_rstctl=0 or 1)
   nn_leapy    =       0   !  Leap year calendar (1) or not (0)
   ln_rstart   =  .true.   !  start from rest (F) or from a restart file (T)
   nn_rstctl   =       2   !  restart control => activated only if ln_rstart = T
                           !    = 0 nn_date0 read in namelist ; nn_it000 : read in namelist
                           !    = 1 nn_date0 read in namelist ; nn_it000 : check consistancy between namelist and restart
                           !    = 2 nn_date0 read in restart  ; nn_it000 : check consistancy between namelist and restart
   cn_ocerst_in  = "ORCA0083-LIM3_00105120_restart_oce"    !  suffix of ocean restart name (input)
   cn_ocerst_indir = "./RESTARTS"    !  directory from which to read input ocean restarts
   cn_ocerst_out = "restart_oce"     !  suffix of ocean restart name (output)
   cn_ocerst_outdir = "./RESTARTS"   !  directory in which to write output ocean restarts
   nn_istate   =       0   !  output the initial state (1) or not (0)
   ln_mskland  = .false.   !  mask land points in NetCDF outputs (costly: + ~15%)
   nn_stock    = 105120    !  frequency of creation of a restart file (modulo referenced to 1)
   ln_clobber  = .true.    !  clobber (overwrite) an existing file
/
!
!!======================================================================
!!               ***  Lateral boundary condition  ***
!!======================================================================
!!   namcfg        parameters of the configuration
!!   namzgr        vertical coordinate
!!   namzgr_sco    s-coordinate or hybrid z coordinate
!!   namdom        space and time domain (bathymetry, mesh, timestep)
!!   namtsd        data : Temperature  & Salinity
!!======================================================================
!
!-----------------------------------------------------------------------
&namcfg        !   parameters of the configuration
!-----------------------------------------------------------------------
   cp_cfg      =  "orca"               !  name of the configuration
   jp_cfg      =    0083               !  resolution of the configuration
   jpidta      =    297               !  1st lateral dimension ( >= jpi )
   jpjdta      =    375               !  2nd    "         "    ( >= jpj )
   jpkdta      =      75               !  number of levels      ( >= jpk )
   jpiglo      =    297               !  1st dimension of global domain --> i =jpidta
   jpjglo      =    375               !  2nd    -                  -    --> j  =jpjdta
   jpizoom     =       1               !  left bottom (i,j) indices of the zoom
   jpjzoom     =       1               !  in data domain indices
   jperio      =       1               !  lateral cond. type (between 0 and 6)
/
!-----------------------------------------------------------------------
&namzgr        !   vertical coordinate
!-----------------------------------------------------------------------
   ln_zco      = .false.   !  z-coordinate - full    steps   (T/F)      ("key_zco" may also be defined)
   ln_zps      = .false.    !  z-coordinate - partial steps
   ln_sco      = .true.   !  s- or hybrid z-s-coordinate    (T/F)
   ln_isfcav   = .false.   !  ice shelf cavity
/
!-----------------------------------------------------------------------
&namzgr_sco    !   s-coordinate or hybrid z-s-coordinate                (default F)
!-----------------------------------------------------------------------
   ln_s_sh94   = .true.    !  Song & Haidvogel 1994 hybrid S-sigma   (T)|
   ln_s_sf12   = .false.   !  Siddorn & Furner 2012 hybrid S-z-sigma (T)| if both are false the NEMO tanh stretching is applied
   ln_sigcrit  = .false.   !  use sigma coordinates below critical depth (T) or Z coordinates (F) for Siddorn & Furner stretch
                           !  stretching coefficients for all functions
   rn_sbot_min =   10.0    !  minimum depth of s-bottom surface (>0) (m)
   rn_sbot_max = 6000.0    !  maximum depth of s-bottom surface (= ocean depth) (>0) (m)
   rn_hc       =  39.0    !  critical depth for transition to stretched coordinates
                        !!!!!!!  Envelop bathymetry
   rn_rmax     =    0.1   !  maximum cut-off r-value allowed (0<r_max<1)
                        !!!!!!!  SH94 stretching coefficients  (ln_s_sh94 = .true.)
   rn_theta    =    6.0    !  surface control parameter (0<=theta<=20)
   rn_bb       =    0.8    !  stretching with SH94 s-sigma
                        !!!!!!!  SF12 stretching coefficient  (ln_s_sf12 = .true.)
   rn_alpha    =    4.4    !  stretching with SF12 s-sigma
   rn_efold    =    0.0    !  efold length scale for transition to stretched coord
   rn_zs       =    1.0    !  depth of surface grid box
                           !  bottom cell depth (Zb) is a linear function of water depth Zb = H*a + b
   rn_zb_a     =    0.024  !  bathymetry scaling factor for calculating Zb
   rn_zb_b     =   -0.2    !  offset for calculating Zb
                        !!!!!!!! Other stretching (not SH94 or SF12) [also uses rn_theta above]
   rn_thetb    =    1.0    !  bottom control parameter  (0<=thetb<= 1)
   nn_sig_lev = 39
   ln_s_melange = .true.

/
!-----------------------------------------------------------------------
&namdom        !   space and time domain (bathymetry, mesh, timestep)
!-----------------------------------------------------------------------
   nn_closea   =    1      !  remove (=0) or keep (=1) closed seas and lakes (ORCA)
   nn_msh      =    0      !  create (=1) a mesh file or not (=0)
   rn_hmin     =   -10.    !  min depth of the ocean (>0) or min number of ocean level (<0)
   rn_isfhmin  =    1.00   !  treshold (m) to discriminate grounding ice to floating ice
   rn_e3zps_min=   25.     !  partial step thickness is set larger than the minimum of
   rn_e3zps_rat=    0.2    !  rn_e3zps_min and rn_e3zps_rat*e3t, with 0<rn_e3zps_rat<1
   rn_rdt      =   300.    !  time step for the dynamics (and tracer if nacc=0)   ==> 5760
   jphgr_msh   =       0               !  type of horizontal mesh
                                       !  = 0 curvilinear coordinate on the sphere read in coordinate.nc
                                       !  = 1 geographical mesh on the sphere with regular grid-spacing
                                       !  = 2 f-plane with regular grid-spacing
                                       !  = 3 beta-plane with regular grid-spacing
                                       !  = 4 Mercator grid with T/U point at the equator
   ppglam0     =  999999.0             !  longitude of first raw and column T-point (jphgr_msh = 1)
   ppgphi0     =  999999.0             ! latitude  of first raw and column T-point (jphgr_msh = 1)
   ppe1_deg    =  999999.0             !  zonal      grid-spacing (degrees)
   ppe2_deg    =  999999.0             !  meridional grid-spacing (degrees)
   ppe1_m      =  999999.0             !  zonal      grid-spacing (degrees)
   ppe2_m      =  999999.0             !  meridional grid-spacing (degrees)
   ppsur       =    -3958.951371276829 !  ORCA r4, r2 and r05 coefficients
   ppa0        =     103.9530096000000 ! (default coefficients)
   ppa1        =     2.415951269000000 !
   ppkth       =     15.35101370000000 !
   ppacr       =        7.0            !
   ppdzmin     =  999999.              !  Minimum vertical spacing
   pphmax      =  999999.              !  Maximum depth
   ldbletanh   =    .TRUE.             !  Use/do not use double tanf function for vertical coordinates
   ppa2        =      100.760928500000 !  Double tanh function parameters
   ppkth2      =       48.029893720000 !
   ppacr2      =       13.000000000000 !
/
!-----------------------------------------------------------------------
&namtsd    !   data : Temperature  & Salinity
!-----------------------------------------------------------------------
!          !  file name                                 ! frequency (hours) ! variable  ! time interp. !  clim  ! 'yearly'/ !                 weights                  ! rotation ! land/sea mask !
!          !                                            !  (if <0  months)  !   name    !   (logical)  !  (T/F) ! 'monthly' !                 filename                 ! pairing  ! filename      !
   sn_tem  = 'EN4.1.1_75L_monthly_19952014_reg1d_C_0_TEOS-10'   ,         -1        ,'votemper' ,     .true.   , .true. , 'yearly'   , 'eORCA12_EN4.1.1f_reg_weights_bilin.nc' ,    ''    ,      ''
   sn_sal  = 'EN4.1.1_75L_monthly_19952014_reg1d_C_0_TEOS-10'   ,         -1        ,'vosaline' ,     .true.   , .true. , 'yearly'   , 'eORCA12_EN4.1.1f_reg_weights_bilin.nc' ,    ''    ,      ''
   cn_dir  = './INPUTS/'
   ln_tsd_init   = .false.   !  Initialisation of ocean T & S with T &S input data (T) or not (F)
   ln_tsd_tradmp = .false.  !  damping of ocean T & S toward T &S input data (T) or not (F)
/
!
!!======================================================================
!!            ***  Surface Boundary Condition namelists  ***
!!======================================================================
!!   namsbc          surface boundary condition
!!   namsbc_ana      analytical         formulation
!!   namsbc_flx      flux               formulation
!!   namsbc_clio     CLIO bulk formulae formulation
!!   namsbc_core     CORE bulk formulae formulation
!!   namsbc_mfs      MFS  bulk formulae formulation
!!   namsbc_cpl      CouPLed            formulation                     ("key_coupled")
!!   namsbc_sas      StAndalone Surface module
!!   namtra_qsr      penetrative solar radiation
!!   namsbc_rnf      river runoffs
!!   namsbc_isf      ice shelf melting/freezing
!!   namsbc_apr      atmospheric Pressure
!!   namsbc_ssr      sea surface restoring term (for T and/or S)
!!   namsbc_alb      albedo parameters
!!   namsbc_wave     external fields from wave model
!!   namberg         iceberg parameters
!!======================================================================
!
!-----------------------------------------------------------------------
&namsbc        !   Surface Boundary Condition (surface module)
!-----------------------------------------------------------------------
   nn_fsbc     = 1         !  frequency of surface boundary condition computation (also = the frequency of sea-ice model call)
   ln_ana      = .false.   !  analytical formulation                    (T => fill namsbc_ana )
   ln_flx      = .false.   !  flux formulation                          (T => fill namsbc_flx )
   ln_blk_clio = .false.   !  CLIO bulk formulation                     (T => fill namsbc_clio)
   ln_blk_core = .true.    !  CORE bulk formulation                     (T => fill namsbc_core)
   ln_blk_mfs  = .false.   !  MFS bulk formulation                      (T => fill namsbc_mfs )
   ln_apr_dyn  = .false.   !  Patm gradient added in ocean & ice Eqs.   (T => fill namsbc_apr )
   nn_ice      = 2         !  =0 no ice boundary condition   ,
                           !  =1 use observed ice-cover      ,
                           !  =2 ice-model used                         ("key_lim3", "key_lim2" or "key_cice")
   nn_ice_embd = 1         !  =0 levitating ice (no mass exchange, concentration/dilution effect)
                           !  =1 levitating ice with mass and salt exchange but no presure effect
                           !  =2 embedded sea-ice (full salt and mass exchanges and pressure)
   ln_dm2dc    = .true.    !  daily mean to diurnal cycle on short wave
   ln_rnf      = .true.    !  runoffs                                   (T => fill namsbc_rnf)
   ln_wave     = .false.   !  Activate coupling with wave (either Stokes Drift or Drag coefficient, or both)  (T => fill namsbc_wave)
   ln_isf      = .true.    !  ice shelf                                 (T   => fill namsbc_isf)
   ln_ssr      = .false.   !  Sea Surface Restoring on T and/or S       (T => fill namsbc_ssr)
   nn_fwb      = 1         !  FreshWater Budget: =0 unchecked
                           !     =1 global mean of e-p-r set to zero at each time step
                           !     =2 annual global mean of e-p-r set to zero
                           !     =3 global emp set to zero and spread out over erp area
   ln_traqsr   = .true.    !  Light penetration (T) or not (F)
/
!-----------------------------------------------------------------------
&namsbc_ana    !   analytical surface boundary condition
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namsbc_flx    !   surface boundary condition : flux formulation
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namsbc_clio   !   namsbc_clio  CLIO bulk formulae
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namsbc_core   !   namsbc_core  CORE bulk formulae
!-----------------------------------------------------------------------
!              !  file name                     ! frequency (hours) ! variable   !  time interp. !  clim  ! 'yearly'/  ! weights                ! rotation ! land/sea mask !
!              !                                !  (if <0  months)  !   name     !   (logical)   !  (T/F) ! 'monthly'  ! filename               ! pairing  ! filename      !
   sn_wndi     = 'U_10_MOD_15JUNE2009_unmasked' ,         6         ,  'U_10_MOD',    .true.     , .true. ,  'yearly'  , 'weights_bicub.nc'      ,    'U1'  ,        ''
   sn_wndj     = 'V_10_MOD_15JUNE2009_unmasked' ,         6         ,  'V_10_MOD',    .true.     , .true. ,  'yearly'  , 'weights_bicub.nc'      ,    'V1'  ,        ''
   sn_qsr      = 'SWDN_MOD_15JUNE2009_unmasked' ,         24        ,  'SWDN_MOD',    .false.    , .true. ,  'yearly'  , 'weights_bilin.nc'      ,     ''   ,        ''
   sn_qlw      = 'LWDN_MOD_15JUNE2009_unmasked' ,         24        ,  'LWDN_MOD',    .false.    , .true. ,  'yearly'  , 'weights_bilin.nc'      ,     ''   ,        ''
   sn_tair     = 'T_10_MOD_15JUNE2009_unmasked' ,         6         ,  'T_10_MOD',    .true.     , .true. ,  'yearly'  , 'weights_bilin.nc'      ,     ''   ,        ''
   sn_humi     = 'Q_10_MOD_15JUNE2009_unmasked' ,         6         ,  'Q_10_MOD',    .true.     , .true. ,  'yearly'  , 'weights_bilin.nc'      ,     ''   ,        ''
   sn_prec     = 'TPRECIP_15JUNE2009_unmasked'  ,         -1        ,  'TPRECIP' ,    .true.     , .true. ,  'yearly'  , 'weights_bilin.nc'      ,     ''   ,        ''
   sn_snow     = 'SNOW_15JUNE2009_unmasked'     ,         -1        ,  'SNOW'    ,    .true.     , .true. ,  'yearly'  , 'weights_bilin.nc'      ,     ''   ,        ''
!
   cn_dir      = './FORCING/'      !  root directory for the location of the bulk files
   ln_taudif   = .false.   !  HF tau contribution: use "mean of stress module - module of the mean stress" data ?
   rn_pfac     = 1.        !  multiplicative factor for precipitation (total & snow)
! ACC   rn_zqt      = 2.        !  Air temperature and humidity reference height (m) (ln_bulk2z) <-- EY comments that the reference height might differ between the
! PM    rn_zqt      = 10.       !  Air temperature and humidity reference height (m) (ln_bulk2z) <-- interannually varying and normal year forcing.
   rn_zqt      = 2.        !  Air temperature and humidity reference height (m) (ln_bulk2z)
   rn_zu       = 10.       !  Wind vector reference height (m)                  (ln_bulk2z)
   rn_pfac     = 1.        !  multiplicative factor for precipitation (total & snow)
   rn_efac     = 1.        !  multiplicative factor for evaporation (0. or 1.)
   rn_vfac     = 1.        !  multiplicative factor for ocean/ice velocity in the calculation of the wind stress (0.=absolute winds or 1.=relative winds)
/
!-----------------------------------------------------------------------
&namsbc_sas    !   analytical surface boundary condition
!-----------------------------------------------------------------------
/
\!-----------------------------------------------------------------------
&namsbc_cpl    !   coupled ocean/atmosphere model                       ("key_coupled")
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namtra_qsr    !   penetrative solar radiation
!-----------------------------------------------------------------------
   ln_qsr_rgb  = .false.   !  RGB (Red-Green-Blue) light penetration
   ln_qsr_2bd  = .true.    !  2 bands              light penetration
   ln_qsr_bio  = .false.   !  bio-model light penetration
   nn_chldta   =      0    !  RGB : Chl data (=1) or cst value (=0)
/
!-----------------------------------------------------------------------
&namsbc_rnf    !   runoffs namelist surface boundary condition
!-----------------------------------------------------------------------
!              !  file name           ! frequency (hours) ! variable  ! time interp. !  clim  ! 'yearly'/ ! weights  ! rotation ! land/sea mask !
!              !                      !  (if <0  months)  !   name    !   (logical)  !  (T/F) ! 'monthly' ! filename ! pairing  ! filename      !
   sn_rnf      = 'eORCA12_runoff_v2.4',        -1         , 'sorunoff',   .true.     , .true. , 'yearly'  , ''       , ''       , ''
   sn_cnf      = 'eORCA12_runoff_v2.4',         -12       , 'socoefr' ,   .false.    , .true. , 'yearly'  , ''       , ''       , ''
   cn_dir       = './FORCING/'      !  root directory for the location of the runoff files
! DE   rn_hrnf      =  15.e0    !  depth over which enhanced vertical mixing is used
! DE  rn_avt_rnf   =   1.e-3   !  value of the additional vertical mixing coef. [m2/s]
! PM   rn_hrnf      =  10.e0    !  depth over which enhanced vertical mixing is used
! PM  rn_avt_rnf   =   2.e-3   !  value of the additional vertical mixing coef. [m2/s]
   rn_hrnf      =  10.e0    !  depth over which enhanced vertical mixing is used
   rn_avt_rnf   =   2.e-3   !  value of the additional vertical mixing coef. [m2/s]
/
!-----------------------------------------------------------------------
&namsbc_isf    !  Top boundary layer (ISF) 
!-----------------------------------------------------------------------
   nn_isf      = 3         !  ice shelf melting/freezing                (/=0 => fill namsbc_isf)
                           !  0 =no isf                  1 = presence of ISF 
                           !  2 = bg03 parametrisation   3 = rnf file for isf   
                           !  4 = ISF fwf specified
                           !  option 1 and 4 need ln_isfcav = .true. (domzgr)
!               !  file name              ! frequency (hours) !  variable  ! time interp. !  clim  ! 'yearly'/ ! weights  ! rotation ! land/sea mask !
!               !                         !  (if <0  months)  !    name    !   (logical)  !  (T/F) ! 'monthly' ! filename ! pairing  ! filename      !
   sn_rnfisf    =  'eORCA12_runoff_v2.4'  ,         -1        , 'sofwfisf' ,    .true.    , .true. , 'yearly'  ,    ''    ,   ''     ,    ''
   sn_depmax_isf=  'eORCA12_runoff_v2.4'  ,         -12       , 'sozisfmax',    .false.   , .true. , 'yearly'  ,    ''    ,   ''     ,    ''
   sn_depmin_isf=  'eORCA12_runoff_v2.4'  ,         -12       , 'sozisfmin',    .false.   , .true. , 'yearly'  ,    ''    ,   ''     ,    ''
/
!-----------------------------------------------------------------------
&namsbc_apr    !   Atmospheric pressure used as ocean forcing or in bulk
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namsbc_ssr    !   surface boundary condition : sea surface restoring
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namsbc_alb    !   albedo parameters
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namsbc_wave   ! External fields from wave model
!-----------------------------------------------------------------------
!              !  file name  ! frequency (hours) ! variable     ! time interp. !  clim   ! 'yearly'/ ! weights  ! rotation ! land/sea mask !
/
!-----------------------------------------------------------------------
&namberg       !   iceberg parameters
!-----------------------------------------------------------------------
      ln_icebergs              = .false.              ! iceberg floats or not
      ln_bergdia               = .false.              ! Calculate budgets
      nn_verbose_level         = 1                    ! Turn on more verbose output if level > 0
      nn_verbose_write         = 1440                 ! Timesteps between verbose messages
      nn_sample_rate           = 1440                 ! Timesteps between sampling for trajectory storage
                                                      ! Initial mass required for an iceberg of each class
      rn_initial_mass          = 8.8e7, 4.1e8, 3.3e9, 1.8e10, 3.8e10, 7.5e10, 1.2e11, 2.2e11, 3.9e11, 7.4e11
                                                      ! Proportion of calving mass to apportion to each class
      rn_distribution          = 0.24, 0.12, 0.15, 0.18, 0.12, 0.07, 0.03, 0.03, 0.03, 0.02
                                                      ! Ratio between effective and real iceberg mass (non-dim)
                                                      ! i.e. number of icebergs represented at a point
      rn_mass_scaling          = 2000, 200, 50, 20, 10, 5, 2, 1, 1, 1
                                                      ! thickness of newly calved bergs (m)
      rn_initial_thickness     = 40., 67., 133., 175., 250., 250., 250., 250., 250., 250.
      rn_rho_bergs             = 850.                 ! Density of icebergs
      rn_LoW_ratio             = 1.5                  ! Initial ratio L/W for newly calved icebergs
      ln_operator_splitting    = .true.               ! Use first order operator splitting for thermodynamics
      rn_bits_erosion_fraction = 0.                   ! Fraction of erosion melt flux to divert to bergy bits
      rn_sicn_shift            = 0.                   ! Shift of sea-ice concn in erosion flux (0<sicn_shift<1)
      ln_passive_mode          = .false.              ! iceberg - ocean decoupling
      nn_test_icebergs         =  -1                  ! Create test icebergs of this class (-1 = no)
                                                      ! Put a test iceberg at each gridpoint in box (lon1,lon2,lat1,lat2)
      rn_test_box              = 108.0,  116.0, -66.0, -58.0
      rn_speed_limit           = 0.                   ! CFL speed limit for a berg

!            ! file name              ! frequency (hours) ! variable  ! time interp.!  clim   ! 'yearly'/ ! weights  ! rotation ! land/sea mask !
!            !                        !  (if <0  months)  !    name   !  (logical)  !  (T/F ) ! 'monthly' ! filename ! pairing  ! filename      !
      sn_icb =  'eORCA12_calving_v2.4',       -12          , 'calving',   .true.    , .true.  , 'yearly'  ,    ''    ,    ''    ,     ''
      cn_dir = './FORCING/'
/
!
!!======================================================================
!!               ***  Lateral boundary condition  ***
!!======================================================================
!!   namlbc        lateral momentum boundary condition
!!   namcla        cross land advection
!!   namobc        open boundaries parameters                           ("key_obc")
!!   namagrif      agrif nested grid ( read by child model only )       ("key_agrif")
!!   nambdy        Unstructured open boundaries                         ("key_bdy")
!!   nambdy_index  open boundaries - definition                         ("key_bdy")
!!   nambdy_dta    open boundaries - external data                      ("key_bdy")
!!   nambdy_tide   tidal forcing at open boundaries                     ("key_bdy_tides")
!!   namtide       tide parameters                                      ("key_tides")
!!======================================================================
!
!-----------------------------------------------------------------------
&namlbc        !   lateral momentum boundary condition
!-----------------------------------------------------------------------
   rn_shlat    =    0.     !  shlat = 0  !  0 < shlat < 2  !  shlat = 2  !  2 < shlat
                           !  free slip  !   partial slip  !   no slip   ! strong slip
   ln_vorlat   = .false.,  !  consistency of vorticity boundary condition with analytical eqs.
/
!-----------------------------------------------------------------------
&namcla        !   cross land advection
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namobc        !   open boundaries parameters                           ("key_obc")
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namagrif      !  AGRIF zoom                                            ("key_agrif")
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&nambdy        !  unstructured open boundaries                          ("key_bdy")
!-----------------------------------------------------------------------
    nb_bdy         = 0                    !  number of open boundary sets
    ln_coords_file = .true.               !  =T : read bdy coordinates from file
    cn_coords_file = 'coordinates.bdy.nc' !  bdy coordinates files
    ln_mask_file   = .true.               !  =T : read mask from file
    cn_mask_file   = 'bdy_mask'           !  name of mask file (if ln_mask_file=.TRUE.)
    cn_dyn2d       = 'flather'            !
    nn_dyn2d_dta   = 1                    !  = 0, bdy data are equal to the initial state
                                          !  = 1, bdy data are read in 'bdydata   .nc' files
                                          !  = 2, use tidal harmonic forcing data from files
                                          !  = 3, use external data AND tidal harmonic forcing
    cn_dyn3d      =  'neumann'            !
    nn_dyn3d_dta  =  1                    !  = 0, bdy data are equal to the initial state
                                          !  = 1, bdy data are read in 'bdydata   .nc' files
    cn_tra        =  'frs'                !
    nn_tra_dta    =  1                    !  = 0, bdy data are equal to the initial state
                                          !  = 1, bdy data are read in 'bdydata   .nc' files
    cn_ice_lim    =  'none'
    nn_ice_lim_dta=  0 
    ln_tra_dmp    =.false.                !  open boudaries conditions for tracers
    ln_dyn3d_dmp  =.false.                !  open boundary condition for baroclinic velocities
    rn_time_dmp   =  10.                  ! Damping time scale in days
    rn_time_dmp_out =  10.                ! Outflow damping time scale
    nn_rimwidth   = 24                    !  width of the relaxation zone
    ln_vol        = .false.               !  total volume correction (see nn_volctl parameter)
    nn_volctl     = 1                     !  = 0, the total water flux across open boundaries is zero
/
!-----------------------------------------------------------------------
&nambdy_index ! open boundaries - definition ("key_bdy")
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&nambdy_dta      !  open boundaries - external data           ("key_bdy")
!-----------------------------------------------------------------------
!            !  file name                  ! frequency (hours) !   variable   ! time interp. !  clim   !  'yearly'/  ! weights  ! rotation ! land/sea mask !
!            !                             !  (if <0  months)  !     name     !   (logical)  !  (T/F ) !  'monthly'  ! filename ! pairing  ! filename      !
   bn_ssh  =      'SO_ECCO_RW24_bt_bdyT'   ,       -1          ,  'sossheig'  ,    .true.    , .true.  ,  'monthly'  ,    ''    ,   ''     ,     ''
   bn_u2d  =      'SO_ECCO_RW24_bdyU'      ,       -1          ,  'vobtcrtx'  ,    .true.    , .true.  ,  'monthly'  ,    ''    ,   ''     ,     ''
   bn_v2d  =      'SO_ECCO_RW24_bdyV'      ,       -1          ,  'vobtcrty'  ,    .true.    , .true.  ,  'monthly'  ,    ''    ,   ''     ,     ''
   bn_u3d  =      'SO_ECCO_RW24_bdyU'      ,       -1          ,  'vozocrtx'  ,    .true.    , .true.  ,  'monthly'  ,    ''    ,   ''     ,     ''
   bn_v3d  =      'SO_ECCO_RW24_bdyV'      ,       -1          ,  'vomecrty'  ,    .true.    , .true.  ,  'monthly'  ,    ''    ,   ''     ,     ''
   bn_tem  =      'SO_ECCO_RW24_bdyT'      ,       -1          ,  'votemper'  ,    .true.    , .true.  ,  'monthly'  ,    ''    ,   ''     ,     ''
   bn_sal  =      'SO_ECCO_RW24_bdyT'      ,       -1          ,  'vosaline'  ,    .true.    , .true.  ,  'monthly'  ,    ''    ,   ''     ,     ''
   cn_dir  =      './BDY_ECCO_RW24/'
   ln_full_vel = .true.
/
!-----------------------------------------------------------------------
&nam_tide      !   tide parameters (#ifdef key_tide)
!-----------------------------------------------------------------------
/
!
!!======================================================================
!!                 ***  Bottom boundary condition  ***
!!======================================================================
!!   nambfr        bottom friction
!!   nambbc        bottom temperature boundary condition
!!   nambbl        bottom boundary layer scheme                         ("key_trabbl")
!!======================================================================
!
!-----------------------------------------------------------------------
&nambfr        !   bottom friction
!-----------------------------------------------------------------------
   nn_bfr      =    2      !  type of bottom friction :   = 0 : free slip,  = 1 : linear friction
                           !                              = 2 : nonlinear friction
   rn_bfri2    =    1.e-3  !  bottom drag coefficient (non linear case). Minimum coeft if ln_loglayer=T
   rn_bfeb2    =    2.5e-3 !  bottom turbulent kinetic energy background  (m2/s2)
   ln_bfr2d    = .true.    !  horizontal variation of the bottom friction coef (read a 2D mask file )
   rn_bfrien   =    50.    !  local multiplying factor of bfr (ln_bfr2d=T)
   ln_bfrimp   = .false.   !  implicit bottom friction (requires ln_zdfexp = .false. if true)
   ln_loglayer = .false.   !  logarithmic formulation (non linear case)
/
!-----------------------------------------------------------------------
&nambbc        !   bottom temperature boundary condition
!-----------------------------------------------------------------------
   ln_trabbc   = .true.   !  Apply a geothermal heating at the ocean bottom
   nn_geoflx   =    2      !  geothermal heat flux: = 0 no flux 
                           !     = 1 constant flux
                           !     = 2 variable flux (read in geothermal_heating.nc in mW/m2)
!              !  file name        ! frequency (hours) ! variable  ! time interp.!  clim   ! 'yearly'/ !                weights              ! rotation ! land/sea mask !
!              !                   !  (if <0  months)  !   name    !  (logical)  !  (T/F ) ! 'monthly' !               filename              ! pairing  ! filename      !
   sn_qgh      = 'Goutorbe_ghflux' ,        -12.       , 'gh_flux' ,   .false.   , .true.  , 'yearly'  , 'eORCA12_Goutorbe_weights_bilin.nc' ,   ''     ,   ''
   cn_dir      = './FORCING/'      !  root directory for the location of the runoff files 
/
!-----------------------------------------------------------------------
&nambbl        !   bottom boundary layer scheme
!-----------------------------------------------------------------------
   nn_bbl_ldf  =  1      !  diffusive bbl (=1)   or not (=0)
   nn_bbl_adv  =  1      !  advective bbl (=1/2) or not (=0)
   rn_ahtbbl   =  1000.  !  lateral mixing coefficient in the bbl  [m2/s]
   rn_gambbl   =  10.    !  advective bbl coefficient                 [s]
/
!
!!======================================================================
!!                        Tracer (T & S ) namelists
!!======================================================================
!!   nameos        equation of state
!!   namtra_adv    advection scheme
!!   namtra_adv_mle   mixed layer eddy param. (Fox-Kemper param.)
!!   namtra_ldf    lateral diffusion scheme
!!   namtra_dmp    T & S newtonian damping
!!======================================================================
!
!-----------------------------------------------------------------------
&nameos        !   ocean physical parameters
!-----------------------------------------------------------------------
   ln_teos10   = .true.          !  = Use TEOS-10 equation of state
   ln_eos80    = .false.         !  = Use EOS80 equation of state
   ln_seos     = .false.         !  = Use simplified equation of state (S-EOS)
/
!-----------------------------------------------------------------------
&namtra_adv    !   advection scheme for tracer
!-----------------------------------------------------------------------
  ln_traadv_cen = .false. !  2nd order centered scheme
      nn_cen_h   =  4            !  =2/4, horizontal 2nd order CEN / 4th order CEN
      nn_cen_v   =  4            !  =2/4, vertical   2nd order CEN / 4th order COMPACT
   ln_traadv_fct = .true. !  FCT scheme
      nn_fct_h   =  2            !  =2/4, horizontal 2nd / 4th order 
      nn_fct_v   =  2            !  =2/4, vertical   2nd / COMPACT 4th order 
      nn_fct_zts =  0            !  >=1,  2nd order FCT scheme with vertical sub-timestepping
      !                          !        (number of sub-timestep = nn_fct_zts)
   ln_traadv_mus = .false. !  MUSCL scheme
      ln_mus_ups = .false.       !  use upstream scheme near river mouths
   ln_traadv_ubs = .false. !  UBS scheme
      nn_ubs_v   =  2            !  =2  , vertical 2nd order FCT / COMPACT 4th order
   ln_traadv_qck = .false. !  QUICKEST scheme
/
!-----------------------------------------------------------------------
&namtra_adv_mle !  mixed layer eddy parametrisation (Fox-Kemper param)
!-----------------------------------------------------------------------
   ln_mle    = .false.      ! (T) use the Mixed Layer Eddy (MLE) parameterisation
/
!----------------------------------------------------------------------------------
&namtra_ldf    !   lateral diffusion scheme for tracers
!----------------------------------------------------------------------------------
   !                       !  Operator type:
   ln_traldf_lap    =  .true.   !  laplacian operator
   ln_traldf_blp    =  .false.  !  bilaplacian operator
   !                       !  Direction of action:
   ln_traldf_lev    =  .false.  !  iso-level
   ln_traldf_hor    =  .false.  !  horizontal (geopotential)   (needs "key_ldfslp" when ln_sco=T)
   ln_traldf_iso    =  .true.   !  iso-neutral (standard operator)
   ln_traldf_triad  =  .false.  !  iso-neutral (triad    operator)
   !                       !  Coefficients:
   nn_aht_ijk_t    = 20        !  space/time variation of eddy coef
   !                           !   = 20 F(i,j)    =ldf_c2d 
   rn_aht_0         =   123.96 !  horizontal eddy diffusivity for tracers [m2/s]
   rn_bht_0        =     0.    !  background eddy diffusivity for ldf_iso [m2/s]
   rn_slpmax       =   0.01    !  slope limit                      (both operators)
/
!-----------------------------------------------------------------------
&namtra_dmp    !   tracer: T & S newtonian damping
!-----------------------------------------------------------------------
   ln_tradmp   =  .false.  !  add a damping termn (T) or not (F)
/
!
!!======================================================================
!!                      ***  Dynamics namelists  ***
!!======================================================================
!!   namdyn_adv    formulation of the momentum advection
!!   nam_vvl       vertical coordinates options
!!   namdyn_vor    advection scheme
!!   namdyn_hpg    hydrostatic pressure gradient
!!   namdyn_spg    surface pressure gradient                            (CPP key only)
!!   namdyn_ldf    lateral diffusion scheme
!!======================================================================
!
!-----------------------------------------------------------------------
&namdyn_adv    !   formulation of the momentum advection
!-----------------------------------------------------------------------
   ln_dynadv_vec = .true.  !  vector form (T) or flux form (F)
   ln_dynzad_zts = .false. !  Use (T) sub timestepping for vertical momentum advection
   nn_dynkeg     = 1       ! scheme for grad(KE): =0   C2  ;  =1   Hollingsworth correction
/
!-----------------------------------------------------------------------
&nam_vvl    !   vertical coordinate options
!-----------------------------------------------------------------------
   ln_vvl_zstar  = .true.           !  zstar vertical coordinate                   
   ln_vvl_dbg    = .false.          !  debug prints    (T/F)
/
!-----------------------------------------------------------------------
&namdyn_vor    !   Vorticity / Coriolis scheme                          (default: NO)
!-----------------------------------------------------------------------
   ln_dynvor_een = .true.  !  energy & enstrophy scheme
/
!-----------------------------------------------------------------------
&namdyn_hpg    !   Hydrostatic pressure gradient option
!-----------------------------------------------------------------------
   ln_hpg_zco  = .false.   !  z-coordinate - full steps
   ln_hpg_zps  = .false.   !  z-coordinate - partial steps (interpolation)
   ln_hpg_sco  = .false.   !  s-coordinate (standard jacobian formulation)
   ln_hpg_isf  = .true.    !  s-coordinate (sco ) adapted to isf
   ln_hpg_djc  = .false.   !  s-coordinate (Density Jacobian with Cubic polynomial)
   ln_hpg_prj  = .false.   !  s-coordinate (Pressure Jacobian scheme)
/
!-----------------------------------------------------------------------
&namdyn_spg    !   surface pressure gradient                            (default: NO)
!-----------------------------------------------------------------------
   ln_dynspg_ts   = .true.    ! split-explicit free surface
/
!-----------------------------------------------------------------------
&namdyn_ldf    !   lateral diffusion on momentum                        (default: NO)
!-----------------------------------------------------------------------
   !                       !  Type of the operator :
   ln_dynldf_lap    =  .false.  !  laplacian operator         
   ln_dynldf_blp    =  .true.   !  bilaplacian operator    
   !                       !  Direction of action  :
   ln_dynldf_hor    =  .true.   !  horizontal (geopotential)
   ln_dynldf_iso    =  .false.  !  iso-neutral 
   !                       !  Coefficient
   nn_ahm_ijk_t  = 20           !  space/time variation of eddy coef
   !                                !  = 20  F(i,j)=F(grid spacing)=c2d
   rn_ahm_0      =     0.       !  horizontal laplacian eddy viscosity   [m2/s]
   rn_ahm_b      =     0.       !  background eddy viscosity for ldf_iso [m2/s]
   rn_bhm_0      = 1.2191e+10   !  horizontal bilaplacian eddy viscosity [m4/s]
/
!
!!======================================================================
!!             Tracers & Dynamics vertical physics namelists
!!======================================================================
!!    namzdf        vertical physics
!!    namzdf_ric    richardson number dependent vertical mixing         ("key_zdfric")
!!    namzdf_tke    TKE dependent vertical mixing                       ("key_zdftke")
!!    namzdf_kpp    KPP dependent vertical mixing                       ("key_zdfkpp")
!!    namzdf_gls    GLS vertical diffusion                              ("key_zdfgls")
!!    namzdf_ddm    double diffusive mixing parameterization            ("key_zdfddm")
!!    namzdf_tmx    tidal mixing parameterization                       ("key_zdftmx")
!!======================================================================
!
!-----------------------------------------------------------------------
&namzdf        !   vertical physics
!-----------------------------------------------------------------------
   nn_havtb    =    1      !  horizontal shape for avtb (=1) or not (=0)
   nn_evdm     =    1       ! evd apply on tracer (=0) or on tracer and momentum (=1)
   rn_avevd    =  10.      !  evd mixing coefficient [m2/s]
   ln_zdfnpc   = .false.   !  Non-Penetrative Convective algorithm (T) or not (F)
   ln_zdfexp   = .false.   !  time-stepping: split-explicit (T) or implicit (F) time stepping
/
!-----------------------------------------------------------------------
&namzdf_ric    !   richardson number dependent vertical diffusion       ("key_zdfric" )
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namzdf_tke    !   turbulent eddy kinetic dependent vertical diffusion  ("key_zdftke")
!-----------------------------------------------------------------------
   nn_mxl      =   3       !  mixing length: = 0 bounded by the distance to surface and bottom
                           !                 = 1 bounded by the local vertical scale factor
                           !                 = 2 first vertical derivative of mixing length bounded by 1
                           !                 = 3 as =2 with distinct disspipative an mixing length scale
   rn_mxl0     =   0.01    !  surface  buoyancy lenght scale minimum value
   nn_htau     =   1       !  type of exponential decrease of tke penetration below the ML
                           !        = 0  constant 10 m length scale
                           !        = 1  0.5m at the equator to 30m poleward of 40 degrees
/
!------------------------------------------------------------------------
&namzdf_kpp    !   K-Profile Parameterization dependent vertical mixing  ("key_zdfkpp", and optionally:
!------------------------------------------------------------------------ "key_kppcustom" or "key_kpplktb")
/
!-----------------------------------------------------------------------
&namzdf_gls    !   GLS vertical diffusion                   ("key_zdfgls")
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namzdf_ddm    !   double diffusive mixing parameterization             ("key_zdfddm")
!-----------------------------------------------------------------------
   rn_avts     = 1.e-4     !  maximum avs (vertical mixing on salinity)
   rn_hsbfr    = 1.6       !  heat/salt buoyancy flux ratio
/
!-----------------------------------------------------------------------
&namzdf_tmx    !   tidal mixing parameterization                        ("key_zdftmx")
!-----------------------------------------------------------------------
   rn_htmx     = 500.      !  vertical decay scale for turbulence (meters)
   rn_n2min    = 1.e-8     !  threshold of the Brunt-Vaisala frequency (s-1)
   rn_tfe      = 0.333     !  tidal dissipation efficiency
   rn_me       = 0.2       !  mixing efficiency
   ln_tmx_itf  = .false.    !  ITF specific parameterisation
   rn_tfe_itf  = 1.        !  ITF tidal dissipation efficiency
/
!
!!======================================================================
!!                  ***  Miscellaneous namelists  ***
!!======================================================================
!!   namsol            elliptic solver / island / free surface
!!   nammpp            Massively Parallel Processing                    ("key_mpp_mpi)
!!   namctl            Control prints & Benchmark
!!   namc1d            1D configuration options                         ("key_c1d")
!!   namc1d_uvd        data: U & V currents                             ("key_c1d")
!!   namc1d_dyndmp     U & V newtonian damping                          ("key_c1d")
!!======================================================================
!
!-----------------------------------------------------------------------
&namsol        !   elliptic solver / island / free surface
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&nammpp        !   Massively Parallel Processing                        ("key_mpp_mpi)
!-----------------------------------------------------------------------
!   ln_nnogather=  .true.   !  activate code to avoid mpi_allgather use at the northfold
!   jpni        =   -1      !  jpni   number of processors following i (set automatically if < 1)
!   jpnj        =   -1      !  jpnj   number of processors following j (set automatically if < 1)
!   jpnij       =   -1      !  jpnij  number of local domains (set automatically if < 1)
!   jpni        =   110     !  jpni   number of processors following i (set automatically if < 1) <-- ACC
!   jpnj        =   120     !  jpnj   number of processors following j (set automatically if < 1) <-- ACC
!   jpnij       =   8972    !  jpnij  number of local domains (set automatically if < 1) <-- ACC
!   jpnj=53,                ! <-- PM
!   jpni=72,                ! <-- PM
!   jpnij=2395,             ! <-- PM, works as long as I have ice cavities activated.
!   jpnij=3816,             ! jpni*jpnj
!   jpnij=1110,             ! jpni*jpnj <-- value reprted in ocean.output by mpp_init2.
   jpni        =   0       !  jpni   number of processors following i (set automatically if < 1)
   jpnj        =   0       !  jpnj   number of processors following j (set automatically if < 1)
   jpnij       =   0     !  jpnij  number of local domains (set automatically if < 1)
/
!-----------------------------------------------------------------------
&namctl        !   Control prints & Benchmark
!-----------------------------------------------------------------------
   ln_ctl      = .false.   !  trends control print (expensive!)
/
!-----------------------------------------------------------------------
&namc1d_uvd    !   data: U & V currents                                 ("key_c1d")
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namc1d_dyndmp !   U & V newtonian damping                              ("key_c1d")
!-----------------------------------------------------------------------
/
!
!!======================================================================
!!                  ***  Diagnostics namelists  ***
!!======================================================================
!!   namnc4       netcdf4 chunking and compression settings             ("key_netcdf4")
!!   namtrd       dynamics and/or tracer trends
!!   namptr       poleward Transport Diagnostics
!!   namflo       float parameters                                      ("key_float")
!!   namhsb       heat and salt budgets
!!   nam_diaharm  harmonic analysis of tidal constituents               ('key_diaharm')
!!   namdct       transports through sections
!!   namdyn_nept  Neptune effect (simplified: lateral and vertical diffusions removed)
!!======================================================================
!
!-----------------------------------------------------------------------
&namnc4        !   netcdf4 chunking and compression settings            ("key_netcdf4")
!-----------------------------------------------------------------------
   nn_nchunks_i=   4       !  number of chunks in i-dimension
   nn_nchunks_j=   4       !  number of chunks in j-dimension
   nn_nchunks_k=   15      !  number of chunks in k-dimension
                           !  setting nn_nchunks_k = jpk will give a chunk size of 1 in the vertical which
                           !  is optimal for postprocessing which works exclusively with horizontal slabs
   ln_nc4zip   = .true.    !  (T) use netcdf4 chunking and compression
                           !  (F) ignore chunking information and produce netcdf3-compatible files
/
!-----------------------------------------------------------------------
&namtrd        !   diagnostics on dynamics and/or tracer trends
!              !       and/or mixed-layer trends and/or barotropic vorticity
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namptr       !   Poleward Transport Diagnostic
!-----------------------------------------------------------------------
   ln_diaptr  = .false.    !  Poleward heat and salt transport (T) or not (F)
   ln_subbas  = .false.    !  Atlantic/Pacific/Indian basins computation (T) or not
/
!-----------------------------------------------------------------------
&namflo       !   float parameters                                      ("key_float")
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namhsb       !  Heat and salt budgets
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&nam_diaharm   !   Harmonic analysis of tidal constituents ('key_diaharm')
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namdct        ! transports through sections
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namdyn_nept  !   Neptune effect (simplified: lateral and vertical diffusions removed)
!-----------------------------------------------------------------------
/
!
!!======================================================================
!!            ***  Observation & Assimilation namelists ***
!!======================================================================
!!   namobs       observation and model comparison                      ('key_diaobs')
!!   nam_asminc   assimilation increments                               ('key_asminc')
!!======================================================================
!
!-----------------------------------------------------------------------
&namobs       !  observation usage                                      ('key_diaobs')
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&nam_asminc   !   assimilation increments                               ('key_asminc')
!-----------------------------------------------------------------------
/
